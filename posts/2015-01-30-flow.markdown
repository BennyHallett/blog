---
title: Flow
description: "You probably know what it's like to be in the zone. You're
completely focussed on what you're doing and the whole world melts away. You
perform your tasks with ease, and hours can pass in the blink of an eye. That's
Flow."
date: "January 30th, 2015"
---

You probably know what it's like to be in the zone. You're
completely focussed on what you're doing and the whole world melts away. You
perform your tasks with ease, and hours can pass in the blink of an eye. That's
Flow.

Most of us know this feeling. We may get it occasionally or we may get it
often. Today we'll be looking at how we can get into Flow more often, and once
we do, how can we stay there longer?

## Flow

I've known about Flow for a long time, even though I never really called it that. Some
times I'd refer to it as _the zone_, but typically it was a topic that was rarely spoken about. It's
worth talking about though, because it's one of the most enjoyable parts of
being a software engineer. If we can learn to master it, we can have a profound
affect on the enjoyment of our day to day job.

When we get into a Flow state our concentration and focus improve significantly,
to the point where we lose track of time. I'm sure that many of us have spent
all night working on a project, only realising the time that had passed once the
sun had risen.

## How can we get into Flow more often?

If our goal is to achieve Flow more often, we need to better understand the
circumstances that trigger flow.

### Goldilocks Tasks

Remember the story of [Goldilocks and the 3
Bears?](http://en.wikipedia.org/wiki/The_Story_of_the_Three_Bears#Later_variations:_Goldilocks). In this story a young
girl stumbles upon an empty house, and enters. She tries out various items in
the house (food, beds, etc) and finds them to have varying properties relative to her
preference. One bed was too soft, one bed was too hard, the other
was just right. It's these just right tasks that we need to look for when we're
trying to get into Flow.

A tasks that's *just right* should be one that's just beyond our current
abilities. If it's too simple then the task can become boring and tedious. If
it's too difficult then we can get frustrated and give up. But those tasks that
are slightly beyond our reach give us something to strive for, something that we know is
achievable and will be rewarding in the end.

This is the type of task that [Dan Pink](http://www.danpink.com/) recommends in 
his [book Drive](http://amzn.to/1MGqFr5). Not too easy, not too difficult. *Just right*.

### Handling the mundane and extra challenging

In the last section we talked about finding tasks that are *just right* for us,
but we know it's not possible to always work on Goldilocks Tasks. Sometimes we
need to take on a challenge that's well beyond us, or more commonly work on some
mundane day-to-day tasks.

So how do we work with these other types of tasks?

If we're working on a mundane day-to-day task, the best way I've found to get
into Flow while doing it is to build a tool to automate it.

One of the [virtues of a programmer](http://threevirtues.com/) is to be lazy. Not _I'm not going to do any
work_ lazy, but _why should I do this boring thing everyday when the computer
can do it for me_ kind of lazy.

So be lazy, use the command line, learn a
[scripting](http://tldp.org/HOWTO/Bash-Prog-Intro-HOWTO.html) [language](https://www.ruby-lang.org/en/documentation/quickstart/), and start
automating those repetitive tasks.

On the other hand, if you're working on a task that is too difficult there are
several strategies you could use to ensure that it doesn't become
overwhelming and kill your Flow.

The time honoured one is to break it down into smaller, more achievable chunks.

Set your sights on tackling things one of these small tasks at a time. Having
two completed tasks out of ten is much less overwhelming than having ten
incomplete tasks, all sitting around 20% completion.

Another technique that I like to use when tackling larger problems is pair
programming. Having a second person working with you to give different
perspectives and talk through problems with really helps.

### Know yourself

The best way to get into Flow more often is to understand what it is that gets
you into that state.

Think back to the last time you felt like you we're in Flow.

* Where are you?
* What problem are you working on?
* Are you alone or working with or around others?
* What time of day is it?
* If you're listening to music, what is it?

All these things can contribute to you getting into Flow or not, and it's worth
getting to know which things work for you. You could even keep notes of these
factors whenever you notice yourself in Flow, however be careful that it doesn't
take you back out of it.

For myself, I know that there are several factors that contribute to getting into
Flow.

#### Time of day

I would describe myself as a night owl. I find I can be really tired during the
day, and then get a burst of energy around 9pm.

This is also the time that I find I get into Flow more easily. I remember nights
where I've been programming furiously only to realise it's 4am and I should
probably be asleep. Even then it can be hard to get to sleep, my brain
still working hard on the problem.

For others though, the morning works better. I've read several times that [some
of the most productive people in the
world](http://www.inc.com/news/articles/2010/07/research-says-morning-people-are-more-proactive.html) get up at 4am or 5am and spend the
first few hours getting work done. I've done this before and I have to say that
it's a pretty good feeling knowing that you've got a whole bunch of work done
while everyone else is still just waking up.

[Here are some tips](http://zenhabits.net/early/) for waking up earlier.

#### Being Prepared

Before I sit down to start, I find it's good to make sure that you have
everything on hand that you need so that you don't have to get up for the next
few hours.

I make sure that I've got some coffee brewed and a jug of water close by. If I
get into Flow quickly, the coffee normally goes cold before I've finished it.

#### Music

For some it will help, for others it won't.

In my case, music helps me shut out the world around me so that I can focus on
the task at hand. Sometimes the location that you need to do your work can be noisy,
especially in an open plan office. Blocking out the surrounding
world helps minimise distractions.

The type of music you listen to can have different effects as well. I find that
music with lyrics can be distracting, and prefer to work to instrumental dance
music. [Aphex Twin's](https://twitter.com/aphextwin) [Selected Ambient Works](http://amzn.to/1LkeOnn) is a great album for this.

[Many](http://www.reddit.com/comments/6l9t9/best_background_music_for_programming) [programmers](https://raam.org/2007/coding-to-classical-music/) [suggest](http://ask.slashdot.org/story/09/12/12/0352216/music-while-programming) that classical music is also a good option for listening to while coding.

#### A goal or purpose

One final thing that I find very important is having a clear goal.

It can be difficult (although not unattainable) to achieve Flow when you sit
down to _just code_ or _just write_. Better is to start with the intention of
adding a specific feature to a project, or write a chapter of a book.

Having a goal allows us to get a head start on our work. When we start with
the goal in mind, we've already started working on the problem before we even
sit down. The process of getting into Flow has started and we're free to focus
on expressing our ideas in whatever format we choose.

It also means we don't spend the first 10 to 15 minutes of our work time
deciding what to work on.

## What things kill Flow?

From the conversations I've had with other software engineers about this topic,
it seems that most (perhaps even all) developers know what it's like to be in Flow.

Some of us may have a pretty good understanding of what it is that gets us
into Flow, and likely, we know exactly what it is that takes us out of Flow.

### Interruptions

The number one way to break my Flow is to interrupt me. I've spent hours building
up a mental model of the problem I'm working on, and even a small interruption can make that
model disappear in an instant.

I think this is because generally our brains are pretty bad at multi tasking.
There is an idea that we can only keep about 6 things in our brain at any one
time. When those things are all parts of a single larger mental model, an
interruption can replace parts of that model and make it difficult to get back
to where you were.

It's that _"Now where was I"_ feeling.

Avoiding interruptions however doesn't mean that we need to work all by
ourselves. A great way to get into Flow and maintain it while working with
someone else is pair programming.

I find it can be an intense experience, and definitely help with getting into
Flow for a number of reasons.

Firstly, even though discussions are taking place, they're almost always
focussed on the problem that's being solved. There's also very little urge to
check emails or Twitter, because the other person is there right by your side.

It helps keep interruptions at bay. A person is less likely to walk up and
start talking to you if you're already sitting at a desk working with someone
else.

## Final thoughts

It's definitely worth getting to understand ourselves better. Getting to know
what things motivate or demotivate us, and what things make our work more or
less enjoyable.

If we can learn to control our ability to get into Flow, then we can have more
control over the enjoyment we get out of our work.

If this is a subject that you're interested in, I can highly recommend reading
[Dan Pink's book, Drive](http://amzn.to/1MGqFr5).
